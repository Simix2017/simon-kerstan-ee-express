plugins {
    id 'java-library'
    id('io.freefair.lombok') version '8.14'
}

repositories {
    mavenCentral()
}

dependencies {
    api 'jakarta.inject:jakarta.inject-api:2.0.1'
    api 'jakarta.json.bind:jakarta.json.bind-api:3.0.1'
    api 'jakarta.json:jakarta.json-api:2.1.3'
    api 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    api 'org.slf4j:slf4j-api:2.0.17'

    runtimeOnly 'org.apache.johnzon:johnzon-jsonb:2.0.2'
    runtimeOnly 'org.apache.johnzon:johnzon:2.0.2'
    runtimeOnly 'com.sun.xml.bind:jaxb-impl:4.0.5'
    runtimeOnly 'org.slf4j:slf4j-jdk14:2.0.17'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.13.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.19.0'
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(Test).configureEach {
    def mockitoAgent = configurations.testRuntimeClasspath.find {
        it.name.contains('mockito-core')
    }
    if (mockitoAgent) {
        jvmArgs "-javaagent:${mockitoAgent.absolutePath}"
    }
}

test {
    useJUnitPlatform()
}
